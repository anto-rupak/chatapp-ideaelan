{"version":3,"sources":["../../src/pages/regulation/regulation.module.ts","../../src/pages/regulation/regulation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACF;AAU9C;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QARhC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,mEAAc,CAAC;aACzC;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACe;AACP;AACT;AACS;AAClD;;;;;GAKG;AACH,wBAAwB;AAMxB;IAOE,wBAAmB,OAAsB,EAAS,SAAoB,EAAS,IAAgB,EAAS,OAAgB,EAAS,OAA0B;QAAxI,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,SAAI,GAAJ,IAAI,CAAY;QAAS,YAAO,GAAP,OAAO,CAAS;QAAS,YAAO,GAAP,OAAO,CAAmB;IAC3J,CAAC;IAED,uCAAc,GAAd;QAAA,iBAMC;QALC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACnC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,MAAM,GAAG,sDAAsD,GAAG,KAAI,CAAC,UAAU,CAAC;QAC1H,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAe,GAAf;QACE,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,+CAAsB,GAAtB;QAAA,iBAyBC;QAxBC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,OAAO,EAAE,UAAU;YACnB,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,wBAAwB;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC;aAC1C,SAAS,CACR,UAAC,IAAS;YACR,UAAU;YACV,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACjC,KAAI,CAAC,QAAQ,GAAG,OAAO;YACvB,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,EAAC,gBAAgB;QAClB,UADE,gBAAgB;QAClB,KAAK;YACH,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,UAAU,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC5B,KAAI,CAAC,WAAW,GAAG,IAAI;aACxB;QACH,CAAC,CACF,CAAC;IACN,CAAC;IA9CU,cAAc;QAJ1B,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;uBAQ2J;OAPhJ,cAAc,CAgD1B;IAAD,CAAC;AAAA;SAhDY,cAAc,e","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RegulationPage } from './regulation';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegulationPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RegulationPage),\r\n  ],\r\n})\r\nexport class RegulationPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/regulation/regulation.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { LoadingController } from 'ionic-angular';\r\n/**\r\n * Generated class for the RegulationPage page by Anto Rupak.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n// Created by Anto Rupak\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-regulation',\r\n  templateUrl: 'regulation.html',\r\n})\r\nexport class RegulationPage {\r\n  resourceId: any;\r\n  appUrl: any;\r\n  rule1: any;\r\n  ruleJson: any;\r\n  getRulesandRegulationsUrl: string;\r\n  statusrules: boolean;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public http: HttpClient, public storage: Storage, public loading: LoadingController) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.resourceId = this.navParams.get('resourceId');\r\n    this.storage.get('appLink').then((val) => {\r\n      this.appUrl = val;\r\n      this.getRulesandRegulationsUrl = this.appUrl + '/WS/IdeaElanService.svc/GetAllInstrumentRulesToShow/' + this.resourceId;\r\n    });\r\n  }\r\n  ionViewDidEnter() {\r\n    this.getRulesandRegulations();\r\n  }\r\n\r\n  getRulesandRegulations() {\r\n    let loader = this.loading.create({\r\n      spinner: \"crescent\",\r\n      content: \"Updating . . .\"\r\n    });\r\n    loader.present();\r\n    //SEDNING UPDATE REQUEST\r\n    this.http.get(this.getRulesandRegulationsUrl)\r\n      .subscribe(\r\n        (data: any) => {\r\n          //RESPONSE\r\n          let resSTR = JSON.stringify(data);\r\n          let resJSON = JSON.parse(resSTR);\r\n          this.ruleJson = resJSON\r\n          loader.dismiss();\r\n        },//ERROR HANDLING\r\n        error => {\r\n          loader.dismiss();\r\n          let resErr = JSON.stringify(error);\r\n          let resErrJSON = JSON.parse(resErr);\r\n          if (resErrJSON.status == 400) {\r\n            this.statusrules = true\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/regulation/regulation.ts"],"sourceRoot":""}